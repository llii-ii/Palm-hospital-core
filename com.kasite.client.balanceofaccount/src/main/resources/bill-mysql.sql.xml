<?xml version="1.0" encoding="UTF-8"?>
<das-client>
	<Sqls>
		<!-- HIS账单表去重 -->
		<Sql name='mysqlDeleteHisBillByTransDate'><![CDATA[
			delete from p_his_bill where 1=1 AND transDate between ? and ?
		]]></Sql>

		<!-- 汇总全流程账单明细数据 查询的时间建议以payOrder和cancelOrder表中的实际时间为主-->
		<Sql name='mysqlSummaryQLCBalance'><![CDATA[
			SELECT oa.orderId,oa.serviceId,oa.reserveId,oa.priceName,oa.price,oa.orderMemo,oa.cardNo,oa.operator,oa.operatorName,oa.createDate,oa.channelId,oa.payUpdateKey,oa.orderState FROM
				(select a.orderId,a.serviceId,a.reserveId,a.priceName,a.price,a.orderMemo,a.cardNo,a.operator,a.operatorName,b.begin createDate,(case b.payState when 2 then 1 end) orderState ,a.operator channelId,b.updateKey payUpdateKey
 				FROM o_order a LEFT JOIN o_payOrder b on a.orderId = b.orderId
				WHERE b.payState='2' AND b.begin BETWEEN '@s' AND '@e'
				UNION ALL
				SELECT
					c.orderId,a.serviceId,a.reserveId,a.priceName,c.price,a.orderMemo,a.cardNo,a.operator,a.operatorName,c.begin createDate,(case c.payState when 4 then 2 end) orderState,a.operator channelId,c.updateKey payUpdateKey
				FROM o_order a RIGHT JOIN o_cancelOrder c on a.orderId = c.orderId
				WHERE c.payState='4' AND c.begin BETWEEN '@s' AND '@e'
				) oa
		]]></Sql>

		<!-- 查看p_bill比p_qlcBalance表多出的订单数据 -->
		<Sql name='mysqlQueryChannelBillDiffQlcBill'><![CDATA[
			SELECT p.businessOrderId orderId,q.serviceId,q.reserveId,q.priceName,CAST(p.transactions AS DECIMAL(10,2))*100 price,q.orderMemo,q.cardNo,q.operator,
				   q.operatorName,p.transTime createDate,p.channel channelId,p.orderNo payUpdateKey,p.orderType orderState
			FROM
				p_bill p
			LEFT JOIN p_qlcBalance q ON p.businessOrderId = q.orderId
			AND (((q.payUpdateKey = p.refundOrderId and p.orderType='2' AND p.channel = '100125') OR ( p.orderType='1' AND p.channel = '100125' )) OR ((q.payUpdateKey = p.orderNo  AND p.channel = '100123')))
			AND p.orderType = q.orderState
			WHERE
				p.transTime BETWEEN '@s' and '@e'
			AND q.orderId IS NULL
		]]></Sql>

		<!-- 查询出来的异常账单由于会缺少一些展示字段,所以这边需要到o_order表中获取那些展示字段 -->
		<Sql name="mysqlQueryOrderData"><![CDATA[
            SELECT * from O_Order o WHERE 1=1 @p
        ]]></Sql>

		<!-- 全流程表去重 -->
		<Sql name='mysqlDeleteQLCBalance'><![CDATA[
			delete from p_qlcBalance WHERE 1=1 AND createDate between ? and ?
		]]></Sql>

		<!-- 汇总三方账单明细数据 由于多数的数据库的金额单位已是分,所以这边不做*100的动作，但是如需转换可以使用如下语句
              CAST(xxx AS DECIMAL(10,2))*100-->
		<Sql name='mysqlSummaryThreePartyBalance'><![CDATA[
			SELECT ob.orderId,	ph.hisOrderId,	pb.orderNo channelOrderId,	ob.serviceId,	ob.reserveId,	ob.priceName,	ob.orderMemo,	ob.cardNo,ph.payMoney receivableMoney,
				pb.transactions alreadyReceivedMoney,	(CASE WHEN ph.refundMoney<>0 THEN 0 END)refundMoney,	(CASE WHEN pb.alreadyRefundMoney<>0 THEN 0 END)alreadyRefundMoney,	ob.createDate,	ob.channelId,
				ob.payUpdateKey,	ob.orderState QLCOrderState,	ph.HisOrderState HisOrderState,	pb.orderType ChannelOrderState
			FROM p_qlcBalance ob
			LEFT JOIN (
				SELECT	b.businessOrderId,	b.orderNo,	b.orderType, b.transactions transactions,b.transactions  alreadyRefundMoney
				FROM	p_bill b
				WHERE	b.orderType  = '1'
				AND b.transTime BETWEEN '@s' AND '@e'
			) pb ON ob.orderId = pb.businessOrderId
			LEFT JOIN (
				SELECT	p.hisOrderState,	p.orderId,	p.payMoney  payMoney,	p.hisOrderId,	p.payMoney  refundMoney,p.CreateDate
				FROM	p_his_bill p
				WHERE	p.HisOrderState = '1'
			AND p.TransDate BETWEEN '@s'AND '@e'
			) ph ON ob.orderId = ph.orderId
			WHERE
				ob.orderState = '1' AND
				ob.createDate BETWEEN '@s' AND '@e'
			UNION ALL
			SELECT	ob.orderId,	ph.hisOrderId,	pb.orderNo channelOrderId,	ob.serviceId,	ob.reserveId,	ob.priceName,	ob.orderMemo,	ob.cardNo,
				(CASE WHEN ph.payMoney<>0 THEN 0 END) receivableMoney,	(CASE WHEN pb.transactions<>0 THEN 0 END) alreadyReceivedMoney,	ph.refundMoney refundMoney,	pb.alreadyRefundMoney alreadyRefundMoney,
				ob.createDate,	ob.channelId,	ob.payUpdateKey,	ob.orderState QLCOrderState,	ph.HisOrderState HisOrderState,	pb.orderType ChannelOrderState
			FROM	p_qlcBalance ob
			LEFT JOIN (
				SELECT	b.businessOrderId,	b.orderNo,	b.orderType, ABS(b.transactions)  transactions,	ABS(b.transactions) alreadyRefundMoney
			FROM	p_bill b
			WHERE	b.orderType = '2'
			AND b.transTime BETWEEN '@s' AND '@e'
			) pb ON ob.orderId = pb.businessOrderId
			LEFT JOIN (
				SELECT	p.hisOrderState,	p.orderId,	ABS(p.payMoney)  payMoney,	p.hisOrderId,	ABS(p.payMoney) refundMoney,	p.CreateDate
				FROM	p_his_bill p
				WHERE	p.HisOrderState = '2'
				AND p.TransDate BETWEEN '@s' AND '@e'
			) ph ON ob.orderId = ph.orderId
			WHERE
				ob.orderState = '2' AND
				ob.createDate BETWEEN '@s' AND '@e'
		]]></Sql>
		<!-- 三方汇总订单明细数据表进行去重 -->
		<Sql name='mysqlDeleteThreePartyBalance'><![CDATA[
			delete from p_threePartyBalance where 1=1  AND bizType='' AND exeState='0'  AND DATE_FORMAT(createDate,'%Y-%m-%d %T') between ? and ?
		]]></Sql>
		<!-- 查询三方汇总账单明细数据 用于前端页面展示 -->
		<Sql name='mysqlQueryThreePartyDetailBills'><![CDATA[
			SELECT @a FROM p_threePartyBalance p WHERE 1 = 1 @p Order By p.createDate desc
		]]></Sql>
		<!-- 再将异常的三方汇总订单明细数据到异常数据表,并防止重复 -->
		<!-- shixian-->
		<Sql name='mysqlQueryExceptionBillWhetherNull'><![CDATA[
			SELECT count(*) FROM p_exceptionBill p WHERE 1 = 1  @p
		]]></Sql>
		<!-- 给三方汇总明细账单数据表中的订单数据赋上业务执行状态-->
		<Sql name='mysqlAddPendingOrder'><![CDATA[
			update p_threePartyBalance p SET p.bizType=?,p.exeState='0'  WHERE 1=1 @p
		]]></Sql>
		<!-- 查询当前订单是否在P_Bill表中-->
		<!-- shixian-->
		<Sql name='mysqlQueryOrderExistBill'><![CDATA[
			SELECT count(*) FROM P_Bill p where p.businessOrderId=? AND p.orderType=?
 		]]></Sql>
		<!-- 查询当前退费订单是否在P_His_Bill表中存在支付订单  得确定HIS退费订单的order是存储在哪个字段上-->
		<Sql name='mysqlQueryOrderExistHisBill'><![CDATA[
			SELECT count(*) FROM P_His_Bill p where p.orderId=? AND p.hisOrderState=?
 		]]></Sql>

		<!-- 查询三方汇总账单明细表指定日期内的数据 -->
		<Sql name='mysqlQueryThreePartyBalance'><![CDATA[
			SELECT * from p_threePartyBalance p WHERE 1=1 AND p.createDate between '@s' and '@e'
		]]></Sql>

		<!-- 查询每日汇总账单表里的明细总数-->
		<Sql name='mysqlQueryEveryDayBillCount'><![CDATA[
			SELECT COUNT(*)
			FROM p_threePartyBalance p
			WHERE p.createDate between '@s' and '@e'
		]]></Sql>
		
		<!-- 汇总每日账单数据 -->
		<Sql name='mysqlSummaryEveryDayBalance'><![CDATA[
			SELECT DISTINCT DATE_FORMAT(p.createDate,'%Y-%m-%d') billDate,
				SUM(CASE WHEN p.hisOrderState<>'' THEN 1 ELSE 0 END) hisBills,
				SUM(CASE WHEN p.qlcOrderState<>'' THEN 1 ELSE 0 END) qlcBills,
				SUM(CASE WHEN p.channelOrderState<>'' THEN 1 ELSE 0 END) channelBills,
				SUM(p.receivableMoney) receivableMoney,
				SUM(p.alreadyReceivedMoney) alreadyReceivedMoney,
				SUM(p.refundMoney) refundMoney,
				SUM(p.alreadyRefundMoney) alreadyRefundMoney
			FROM
				p_threePartyBalance p
			WHERE p.createDate between '@s' and '@e'
		]]></Sql>
		<!-- 生成每日分类汇总账单数据 根据渠道ID和服务ID进行分组-->
		<Sql name='mysqlClassifySummaryBill'><![CDATA[
			SELECT DATE_FORMAT(p.createDate, '%Y-%m-%d') billDate,p.channelId,p.serviceId,p.priceName serviceName,
				SUM(CASE WHEN p.hisOrderState <> '' THEN 1 ELSE 0 END) hisBills,
				SUM(CASE WHEN p.qlcOrderState <> '' THEN 1 ELSE 0 END) qlcBills,
				SUM(CASE WHEN p.channelOrderState <> '' THEN 1 ELSE	0 END) channelBills,
				SUM(p.receivableMoney) receivableMoney,
				SUM(p.alreadyReceivedMoney) alreadyReceivedMoney,
				SUM(p.refundMoney) refundMoney,
				SUM(p.alreadyRefundMoney) alreadyRefundMoney
			FROM p_threePartyBalance p WHERE
				p.createDate BETWEEN '@s' AND '@e'
				GROUP BY p.channelId,p.serviceId
		]]></Sql>

		<!-- 每日汇总账单表去重-->
		<Sql name='mysqlDeleteEveryDayBalance'><![CDATA[
			delete from p_everyDayBalance where 1=1 AND DATE_FORMAT(billDate,'%Y-%m-%d %T') between ? and ?
		]]></Sql>
		<!-- 分类汇总账单表去重-->
		<Sql name='mysqlDeleteClassifySummaryBalance'><![CDATA[
			delete from p_classifySummaryBalance where 1=1 AND DATE_FORMAT(billDate,'%Y-%m-%d %T') between ? and ?
		]]></Sql>
		<!-- 查询指定日期内的每日汇总账单列表-->
		<Sql name='mysqlQueryEveryDayBills'><![CDATA[
			SELECT @a FROM p_everyDayBalance p WHERE 1 = 1  @p ORDER BY p.billDate desc
		]]></Sql>
		<!-- 查询指定日期内的分类汇总账单数据-->
		<Sql name='mysqlQueryClassifySummaryBills'><![CDATA[
			SELECT @a FROM p_classifySummaryBalance p WHERE 1 = 1  @p ORDER BY p.billDate desc
		]]></Sql>

		<!--                               涉及冲正，退费业务的SQL                                  -->
		<!-- 查询三方汇总明细数据表中的异常账单笔数-->
		<Sql name='mysqlQueryErrorNum'><![CDATA[
			SELECT COUNT(*) errorNum from p_threePartyBalance o WHERE o.hisOrderState='' AND o.exeState<>'2' AND o.createDate BETWEEN '@s' AND '@e'
		]]></Sql>
		<!-- 查询需要执行业务的订单-->
		<Sql name='mysqlQueryExistBizOrder'><![CDATA[
			SELECT * FROM p_threePartyBalance p where (p.bizType='2' or p.bizType='3') AND p.exeState='0'
		]]></Sql>
		<!-- 查询订单创建时间-->
		<Sql name='mysqlQueryOrderCreateDate'><![CDATA[
			SELECT  DATE_FORMAT(p.createDate,'%Y-%m-%d') createDate from p_threePartyBalance p where 1=1 @p
		]]></Sql>
		<!-- 更新执行订单状态-->
		<Sql name='mysqlUpdateThreePartyBalanceExeState'><![CDATA[
			UPDATE p_threePartyBalance p SET p.exeState=? @s WHERE 1=1 @p
		]]></Sql>
		<!--  查询当前日期内是否还存在异常账单（用于汇总每日账单）要特别注意hisOrderId='' 这个条件,也许数据库或者表不同，该字段取值也得修改-->
		<Sql name='mysqlQueryVeryDayExitsErrorBill'><![CDATA[
			select COUNT(*) errorNum from p_threePartyBalance p WHERE  (p.channelorderid='' OR p.hisOrderId='') AND p.exeState<>'2' AND p.createDate BETWEEN '@s' AND '@e'
		]]></Sql>
		<!-- 查询已存在业务的异常订单-->
		<Sql name='mysqlQueryExitsErrorBills'><![CDATA[
			select *  from p_threePartyBalance p WHERE  p.bizType<>'' AND p.exeState<>'0' AND p.createDate   BETWEEN '@s' AND '@e'
		]]></Sql>
		<!-- 查询当前存在已执行业务的异常订单是否在表中-->
		<Sql name='mysqlQueryOrderExist'><![CDATA[
			select count(*) from p_threePartyBalance p WHERE 1=1 AND p.bizType<>'' @p
		]]></Sql>


	</Sqls>
</das-client>